Tips for each category

Rolling Window
- monotonically decreasing queue sometimes useful to find min for each window

Stack
- monotonically decreasing stack 

Binary search
- knowing how to pivot bias left or right, and keeping results if still valid

Linked List 
- Fast and slow advancing

Trie
- use for c in word

heap
- Heap good to get the k largest / smallest
- use quickselect to get the kth largest (individual item)

backtracking
- If you want to reuse state, recursive backtrack. State, for each next, add to state, backtrack, remove from state
- Iterative backtracking - only possible if you can save a copy of the state to the stack.
- Backtracking is a lot like dfs